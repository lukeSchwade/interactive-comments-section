//Primaries
$moderate-blue: hsl(238, 40%, 52%);
$soft-red: hsl(358, 79%, 66%);
$light-grayish-blue: hsl(239, 57%, 85%);
$pale-red: hsl(357, 100%, 86%);

//Neutrals
$dark-blue: hsl(212, 24%, 26%);
$grayish-blue: hsl(211, 10%, 45%);
$light-gray: hsl(223, 19%, 93%);
$very-light-gray: hsl(228, 33%, 97%);
$white: hsl(0, 0%, 100%);

* {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
    font-family: "Rubik";
    font-size: 16px;
}
p {
    color: $grayish-blue;
}

@mixin flex-container {
    display: flex;
}
@mixin vertical-flex {
    @include flex-container;
    flex-direction: column;
}

//Media query mixins, you can add these anywhere to make media-specific alterations
//List of media breakpoints, assuming mobile first, the default will be smaller than 766
$breakpoints: (
    'to-small'      : ( max-width:  766px ),
    'small'         : ( min-width:  767px ),
    'to-medium'     : ( max-width:  991px ),
    'medium'        : ( min-width:  992px ),
    'to-large'      : ( min-width: 1199px ),
    'large'         : ( min-width: 1200px ),
    'to-x-large'    : ( min-width: 1599px ),
    'x-large'       : ( min-width: 1600px )
);

@mixin media($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media #{inspect(map-get($breakpoints, $breakpoint))} {
        @content;
        }
    }

    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
            + "Please make sure it is defined in `$breakpoints` map.";
    }
}

// this query will apply from widths larger then 1200px
// meaning you have the same for mobile and tablet
//  @include media('large') {
//    width: 25%;
// }